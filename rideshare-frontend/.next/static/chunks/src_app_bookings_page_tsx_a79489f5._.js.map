{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Desktop/sty/diplom3/rideshare-frontend/src/app/bookings/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { Card, List, Button, message, Tabs, Tag, Empty, Space, Badge } from 'antd';\nimport { useRouter } from 'next/navigation';\nimport { Booking, Trip } from '@/types/trip';\nimport { MessageOutlined } from '@ant-design/icons';\n\n/**\n * BookingsPage компонент для отображения и управления бронированиями пользователя.\n * Позволяет просматривать бронирования как в роли пассажира, так и в роли водителя.\n * Предоставляет функционал для подтверждения, отклонения и отмены бронирований.\n */\nconst BookingsPage: React.FC = () => {\n  const [bookings, setBookings] = useState<Booking[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('1');\n  const router = useRouter();\n\n  /**\n   * Загружает список бронирований в зависимости от роли пользователя\n   * @param role - Роль пользователя ('passenger' или 'driver')\n   */\n  const fetchBookings = useCallback(async (role: 'passenger' | 'driver') => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (!token) {\n        router.push('/auth/login');\n        return;\n      }\n\n      setLoading(true);\n      const response = await fetch(`http://localhost:8000/api/bookings/?role=${role}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(`${role} bookings data:`, data);\n        const bookingsData = data.results || data;\n        setBookings(Array.isArray(bookingsData) ? bookingsData : []);\n      } else {\n        throw new Error('Failed to fetch bookings');\n      }\n    } catch (error) {\n      console.error('Error fetching bookings:', error);\n      message.error('Failed to load bookings');\n    } finally {\n      setLoading(false);\n    }\n  }, [router]);\n\n  /**\n   * Обработчик смены вкладки между ролями пассажира и водителя\n   * @param key - Ключ активной вкладки ('1' для пассажира, '2' для водителя)\n   */\n  const handleTabChange = (key: string) => {\n    setActiveTab(key);\n    fetchBookings(key === '1' ? 'passenger' : 'driver');\n  };\n\n  useEffect(() => {\n    // Загружаем данные для начальной вкладки\n    fetchBookings('passenger');\n  }, [fetchBookings]);\n\n  /**\n   * Подтверждает бронирование (доступно только для водителя)\n   * @param bookingId - ID бронирования для подтверждения\n   */\n  const handleAcceptBooking = async (bookingId: number) => {\n    try {\n      const token = localStorage.getItem('access_token');\n      console.log('Accepting booking:', bookingId);\n\n      const response = await fetch(`http://localhost:8000/api/bookings/${bookingId}/accept/`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      const data = await response.json();\n      console.log('Accept booking response:', data);\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to accept booking');\n      }\n\n      message.success('Бронирование подтверждено');\n      fetchBookings('driver');\n    } catch (error) {\n      console.error('Error accepting booking:', error);\n      message.error('Ошибка при подтверждении бронирования');\n    }\n  };\n\n  /**\n   * Отклоняет бронирование (доступно только для водителя)\n   * @param bookingId - ID бронирования для отклонения\n   */\n  const handleRejectBooking = async (bookingId: number) => {\n    try {\n      const token = localStorage.getItem('access_token');\n      console.log('Rejecting booking:', bookingId);\n\n      const response = await fetch(`http://localhost:8000/api/bookings/${bookingId}/reject/`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      const data = await response.json();\n      console.log('Reject booking response:', data);\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to reject booking');\n      }\n\n      message.success('Бронирование отклонено');\n      fetchBookings('driver');\n    } catch (error) {\n      console.error('Error rejecting booking:', error);\n      message.error('Ошибка при отклонении бронирования');\n    }\n  };\n\n  /**\n   * Отменяет бронирование (доступно для пассажира)\n   * @param bookingId - ID бронирования для отмены\n   */\n  const handleCancelBooking = async (bookingId: number) => {\n    try {\n      const token = localStorage.getItem('access_token');\n      const response = await fetch(`http://localhost:8000/api/bookings/${bookingId}/cancel/`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n      if (response.ok) {\n        message.success('Бронирование успешно отменено');\n        fetchBookings('passenger');\n      } else {\n        const errorData = await response.json();\n        message.error(errorData.error || 'Ошибка при отмене бронирования');\n      }\n    } catch (error) {\n      message.error('Ошибка при отмене бронирования');\n    }\n  };\n\n  /**\n   * Открывает чат для обсуждения поездки\n   * @param tripId - ID поездки для открытия чата\n   */\n  const handleOpenChat = async (tripId: number) => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (!token) {\n        router.push('/auth/login');\n        return;\n      }\n\n      const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000'}/api/chats/trip_chat/?trip_id=${tripId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to get chat');\n      }\n\n      const data = await response.json();\n      router.push(`/chat/${data.id}`);\n    } catch (error) {\n      console.error('Error opening chat:', error);\n      message.error('Не удалось открыть чат');\n    }\n  };\n\n  /**\n   * Форматирует дату в локальный формат\n   * @param dateStr - Строка с датой\n   * @returns Отформатированная дата в формате локали ru-RU\n   */\n  const formatDate = (dateStr: string) => {\n    try {\n      return new Date(dateStr).toLocaleDateString('ru-RU');\n    } catch (error) {\n      return dateStr;\n    }\n  };\n\n  /**\n   * Форматирует время, оставляя только часы и минуты\n   * @param timeStr - Строка со временем в формате HH:MM:SS\n   * @returns Отформатированное время в формате HH:MM\n   */\n  const formatTime = (timeStr: string) => {\n    try {\n      // Если время приходит в формате \"HH:MM:SS\", оставляем только часы и минуты\n      return timeStr.split(':').slice(0, 2).join(':');\n    } catch (error) {\n      return timeStr;\n    }\n  };\n\n  /**\n   * Возвращает цвет для статуса бронирования\n   * @param status - Статус бронирования\n   * @returns Строка с названием цвета для компонента Tag\n   */\n  const getStatusColor = (status: string) => {\n    const statusLower = status.toLowerCase();\n    switch (statusLower) {\n      case 'pending':\n        return 'orange';\n      case 'confirmed':\n        return 'green';\n      case 'cancelled':\n        return 'red';\n      case 'completed':\n        return 'blue';\n      default:\n        return 'default';\n    }\n  };\n\n  /**\n   * Возвращает текстовое описание статуса на русском языке\n   * @param status - Статус бронирования\n   * @returns Локализованный текст статуса\n   */\n  const getStatusText = (status: string) => {\n    const statusLower = status.toLowerCase();\n    switch (statusLower) {\n      case 'pending':\n        return 'Ожидает подтверждения';\n      case 'confirmed':\n        return 'Подтверждено';\n      case 'cancelled':\n        return 'Отменено';\n      case 'completed':\n        return 'Завершено';\n      default:\n        return status;\n    }\n  };\n\n  /**\n   * Возвращает тип бейджа для статуса\n   * @param status - Статус бронирования\n   * @returns Тип бейджа для компонента Badge\n   */\n  const getStatusBadgeType = (status: string) => {\n    const statusLower = status.toLowerCase();\n    switch (statusLower) {\n      case 'pending':\n        return 'default';\n      case 'confirmed':\n        return 'success';\n      case 'cancelled':\n        return 'error';\n      case 'completed':\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n\n  /**\n   * Рендерит карточку отдельного бронирования\n   * @param booking - Объект бронирования\n   * @returns Компонент карточки бронирования\n   */\n  const renderBookingCard = (booking: Booking) => (\n    <List.Item>\n      <Card className=\"w-full\">\n        <div className=\"flex justify-between items-start\">\n          <div>\n            <h3 className=\"text-lg font-semibold\">\n              Поездка: {booking.trip?.departure_location || 'Не указано'} → {booking.trip?.destination_location || 'Не указано'}\n            </h3>\n            <p>Дата: {formatDate(booking.trip?.date || '')}</p>\n            <p>Время: {formatTime(booking.trip?.time || '')}</p>\n            <p>Мест: {booking.seats_booked}</p>\n            <p>Цена: {booking.total_price} ₽</p>\n            {activeTab === '1' ? (\n              <p>Водитель: {booking.trip?.driver?.username || 'Неизвестно'}</p>\n            ) : (\n              <p>Пассажир: {booking.passenger?.username || 'Неизвестно'}</p>\n            )}\n            <Tag color={getStatusColor(booking.status)}>\n              {getStatusText(booking.status)}\n            </Tag>\n          </div>\n          <div className=\"flex gap-2\">\n            {booking.status.toLowerCase() === 'pending' && (\n              activeTab === '1' ? (\n                <Button danger onClick={() => handleCancelBooking(booking.id)}>\n                  Отменить\n                </Button>\n              ) : (\n                <>\n                  <Button\n                    type=\"primary\"\n                    onClick={() => handleAcceptBooking(booking.id)}\n                    style={{ backgroundColor: '#52c41a' }}\n                  >\n                    Подтвердить\n                  </Button>\n                  <Button\n                    danger\n                    onClick={() => handleRejectBooking(booking.id)}\n                  >\n                    Отклонить\n                  </Button>\n                </>\n              )\n            )}\n            <Button onClick={() => router.push(`/trips/${booking.trip.id}`)}>\n              Посмотреть поездку\n            </Button>\n            {booking.status !== 'cancelled' && (\n              <Button\n                type=\"primary\"\n                icon={<MessageOutlined />}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  handleOpenChat(booking.trip.id);\n                }}\n              >\n                Чат\n              </Button>\n            )}\n          </div>\n        </div>\n      </Card>\n    </List.Item>\n  );\n\n  const items = [\n    {\n      key: '1',\n      label: 'Я пассажир',\n      children: (\n        <List\n          loading={loading}\n          dataSource={bookings}\n          locale={{ emptyText: <Empty description=\"Нет бронирований\" /> }}\n          renderItem={renderBookingCard}\n        />\n      ),\n    },\n    {\n      key: '2',\n      label: 'Я водитель',\n      children: (\n        <List\n          loading={loading}\n          dataSource={bookings}\n          locale={{ emptyText: <Empty description=\"Нет бронирований\" /> }}\n          renderItem={renderBookingCard}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-2xl font-bold mb-6 text-black\">Мои бронирования</h1>\n      <Tabs activeKey={activeTab} onChange={handleTabChange} items={items} />\n    </div>\n  );\n};\n\nexport default BookingsPage; "],"names":[],"mappings":"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","debugId":null}}]
}