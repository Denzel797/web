{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Desktop/sty/diplom3/rideshare-frontend/src/app/trips/create/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport dynamic from 'next/dynamic';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { MapPinIcon } from '@heroicons/react/24/outline';\r\n\r\ninterface Location {\r\n  address: string;\r\n  coordinates: [number, number];\r\n}\r\n\r\ninterface TripFormData {\r\n  departure_location: string;\r\n  destination_location: string;\r\n  departure_coords: string;\r\n  destination_coords: string;\r\n  date: string;\r\n  time: string;\r\n  available_seats: number;\r\n  price: number;\r\n  description: string;\r\n  status: 'draft' | 'active' | 'completed' | 'cancelled';\r\n}\r\n\r\n// Dynamically import the Map component to avoid SSR issues\r\nconst MapComponent = dynamic(() => import('@/components/Map'), {\r\n  ssr: false,\r\n  loading: () => <div>Loading map...</div>\r\n});\r\n\r\nexport default function CreateTripPage() {\r\n  const router = useRouter();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isSelectingDeparture, setIsSelectingDeparture] = useState(false);\r\n  const [isSelectingDestination, setIsSelectingDestination] = useState(false);\r\n  const [formData, setFormData] = useState<TripFormData>({\r\n    departure_location: '',\r\n    destination_location: '',\r\n    departure_coords: '',\r\n    destination_coords: '',\r\n    date: '',\r\n    time: '',\r\n    available_seats: 1,\r\n    price: 0,\r\n    description: '',\r\n    status: 'draft'\r\n  });\r\n\r\n  const handleMapClick = async (coords: [number, number]) => {\r\n    try {\r\n      // Use Nominatim for reverse geocoding\r\n      const response = await fetch(\r\n        `https://nominatim.openstreetmap.org/reverse?format=json&lat=${coords[0]}&lon=${coords[1]}`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to geocode coordinates');\r\n      }\r\n\r\n      const data = await response.json();\r\n      const address = data.display_name;\r\n\r\n      if (isSelectingDeparture) {\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          departure_location: address,\r\n          departure_coords: coords.join(',')\r\n        }));\r\n        setIsSelectingDeparture(false);\r\n      } else if (isSelectingDestination) {\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          destination_location: address,\r\n          destination_coords: coords.join(',')\r\n        }));\r\n        setIsSelectingDestination(false);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error handling map click:', err);\r\n      setError('Ошибка при определении адреса');\r\n    }\r\n  };\r\n\r\n  const handleMarkerDrag = async (type: 'departure' | 'destination', coords: [number, number]) => {\r\n    try {\r\n      // Use Nominatim for reverse geocoding\r\n      const response = await fetch(\r\n        `https://nominatim.openstreetmap.org/reverse?format=json&lat=${coords[0]}&lon=${coords[1]}`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to geocode coordinates');\r\n      }\r\n\r\n      const data = await response.json();\r\n      const address = data.display_name;\r\n\r\n      if (type === 'departure') {\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          departure_location: address,\r\n          departure_coords: coords.join(',')\r\n        }));\r\n      } else {\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          destination_location: address,\r\n          destination_coords: coords.join(',')\r\n        }));\r\n      }\r\n    } catch (err) {\r\n      console.error('Error handling marker drag:', err);\r\n      setError('Ошибка при определении адреса');\r\n    }\r\n  };\r\n\r\n  const handleAddressChange = (field: 'departure_location' | 'destination_location', value: string) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const handleAddressSearch = async (field: 'departure_location' | 'destination_location') => {\r\n    const address = formData[field];\r\n    if (!address) return;\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      // Use Nominatim for geocoding\r\n      const response = await fetch(\r\n        `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to geocode address');\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (data.length > 0) {\r\n        const location = {\r\n          address: data[0].display_name,\r\n          coordinates: [parseFloat(data[0].lat), parseFloat(data[0].lon)] as [number, number]\r\n        };\r\n\r\n        const coordsField = field === 'departure_location' ? 'departure_coords' : 'destination_coords';\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          [field]: location.address,\r\n          [coordsField]: location.coordinates.join(','),\r\n        }));\r\n      } else {\r\n        setError('Адрес не найден');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error geocoding address:', err);\r\n      setError('Ошибка при поиске адреса');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Format the data to match backend expectations\r\n      const tripData = {\r\n        ...formData,\r\n        // Ensure price is sent as a decimal\r\n        price: Number(formData.price).toFixed(2),\r\n        // Ensure coordinates are in the correct format\r\n        departure_coords: formData.departure_coords.split(',').map(Number).join(','),\r\n        destination_coords: formData.destination_coords.split(',').map(Number).join(','),\r\n      };\r\n\r\n      const response = await fetch('http://localhost:8000/api/trips/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('access_token')}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(tripData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.detail || 'Failed to create trip');\r\n      }\r\n\r\n      router.push('/trips');\r\n    } catch (err) {\r\n      console.error('Error creating trip:', err);\r\n      setError(err instanceof Error ? err.message : 'Ошибка при создании поездки');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4 max-w-6xl\">\r\n      <h1 className=\"text-3xl font-bold mb-6 text-gray-800\">Создать поездку</h1>\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        <div className=\"space-y-4\">\r\n          <div className=\"relative\">\r\n            <label className=\"block text-sm font-medium text-gray-700\">Место отправления</label>\r\n            <div className=\"mt-1 flex\">\r\n              <input\r\n                type=\"text\"\r\n                value={formData.departure_location}\r\n                onChange={(e) => handleAddressChange('departure_location', e.target.value)}\r\n                className=\"flex-1 block w-full rounded-l-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm text-black\"\r\n                placeholder=\"Введите адрес отправления\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setIsSelectingDeparture(true)}\r\n                className=\"inline-flex items-center px-3 py-2 border border-l-0 border-gray-300 rounded-r-md bg-gray-50 hover:bg-gray-100\"\r\n              >\r\n                <span className=\"sr-only\">Выбрать на карте</span>\r\n                <MapPinIcon className=\"h-5 w-5 text-gray-400\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"relative\">\r\n            <label className=\"block text-sm font-medium text-gray-700\">Место назначения</label>\r\n            <div className=\"mt-1 flex\">\r\n              <input\r\n                type=\"text\"\r\n                value={formData.destination_location}\r\n                onChange={(e) => handleAddressChange('destination_location', e.target.value)}\r\n                className=\"flex-1 block w-full rounded-l-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm text-black\"\r\n                placeholder=\"Введите адрес назначения\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setIsSelectingDestination(true)}\r\n                className=\"inline-flex items-center px-3 py-2 border border-l-0 border-gray-300 rounded-r-md bg-gray-50 hover:bg-gray-100\"\r\n              >\r\n                <span className=\"sr-only\">Выбрать на карте</span>\r\n                <MapPinIcon className=\"h-5 w-5 text-gray-400\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Дата отправления</label>\r\n              <input\r\n                type=\"date\"\r\n                value={formData.date}\r\n                onChange={(e) => setFormData(prev => ({ ...prev, date: e.target.value }))}\r\n                className=\"w-full rounded-md border border-gray-300 px-3 py-2 text-black focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                min={new Date().toISOString().split('T')[0]}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Время отправления</label>\r\n              <input\r\n                type=\"time\"\r\n                value={formData.time}\r\n                onChange={(e) => setFormData(prev => ({ ...prev, time: e.target.value }))}\r\n                className=\"w-full rounded-md border border-gray-300 px-3 py-2 text-black focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Количество мест</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"8\"\r\n                value={formData.available_seats}\r\n                onChange={(e) => setFormData(prev => ({ ...prev, available_seats: parseInt(e.target.value) }))}\r\n                className=\"w-full rounded-md border border-gray-300 px-3 py-2 text-black focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Цена за место</label>\r\n              <input\r\n                type=\"number\"\r\n                min=\"0\"\r\n                step=\"0.01\"\r\n                value={formData.price}\r\n                onChange={(e) => setFormData(prev => ({ ...prev, price: parseFloat(e.target.value) }))}\r\n                className=\"w-full rounded-md border border-gray-300 px-3 py-2 text-black focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Описание</label>\r\n            <textarea\r\n              value={formData.description}\r\n              onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\r\n              className=\"w-full rounded-md border border-gray-300 px-3 py-2 text-black focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              rows={4}\r\n              placeholder=\"Добавьте описание поездки...\"\r\n            />\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"text-red-500 text-sm mt-2\">\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isLoading}\r\n            className=\"w-full bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:bg-gray-400\"\r\n          >\r\n            {isLoading ? 'Создание...' : 'Создать поездку'}\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"h-[500px] rounded-lg overflow-hidden shadow-md\">\r\n          <MapComponent\r\n            onMapClick={handleMapClick}\r\n            onMarkerDrag={handleMarkerDrag}\r\n            departureCoords={formData.departure_coords ? formData.departure_coords.split(',').map(Number) as [number, number] : undefined}\r\n            destinationCoords={formData.destination_coords ? formData.destination_coords.split(',').map(Number) as [number, number] : undefined}\r\n            isSelectingDeparture={isSelectingDeparture}\r\n            isSelectingDestination={isSelectingDestination}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}