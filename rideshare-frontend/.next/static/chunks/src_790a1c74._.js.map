{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Desktop/sty/diplom3/rideshare-frontend/src/constants.ts"],"sourcesContent":["export const API_BASE_URL = 'http://localhost:8000'; "],"names":[],"mappings":";;;AAAO,MAAM,eAAe","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Admin/Desktop/sty/diplom3/rideshare-frontend/src/app/trips/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport { Spin, Card, Tabs, Button, Badge, Empty } from 'antd';\nimport { PlusOutlined, ArrowRightOutlined } from '@ant-design/icons';\nimport { API_BASE_URL } from '@/constants';\n\ninterface Trip {\n  id: number;\n  driver: {\n    id: number;\n    username: string;\n    first_name: string;\n    last_name: string;\n  };\n  departure_location: string;\n  destination_location: string;\n  departure_coords: string;\n  destination_coords: string;\n  date: string;\n  time: string;\n  price: number;\n  available_seats: number;\n  description: string;\n  status: 'pending' | 'active' | 'completed' | 'cancelled';\n  created_at: string;\n  updated_at: string;\n}\n\nexport default function TripsPage() {\n  const router = useRouter();\n  const [trips, setTrips] = useState<Trip[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [activeTab, setActiveTab] = useState<'driver' | 'passenger'>('driver');\n  const baseUrl = API_BASE_URL;\n\n  useEffect(() => {\n    fetchTrips();\n  }, [activeTab]);\n\n  const fetchTrips = async () => {\n    setIsLoading(true);\n    setError(null);\n    const token = localStorage.getItem('access_token');\n\n    if (!token) {\n      router.push('/auth/login');\n      return;\n    }\n\n    try {\n      const response = await fetch(`${baseUrl}/api/trips/${activeTab === 'driver' ? 'driver_trips' : 'passenger_trips'}/`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        if (response.status === 401) {\n          localStorage.removeItem('access_token');\n          router.push('/auth/login');\n          return;\n        }\n        throw new Error('Failed to fetch trips');\n      }\n\n      const data = await response.json();\n      setTrips(data.results || data);\n    } catch (err) {\n      setError('Ошибка при загрузке поездок');\n      console.error('Error fetching trips:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getStatusBadgeColor = (status: Trip['status']) => {\n    switch (status) {\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'active':\n        return 'bg-green-100 text-green-800';\n      case 'completed':\n        return 'bg-blue-100 text-blue-800';\n      case 'cancelled':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleString('ru-RU', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center min-h-screen\">\n        <Spin size=\"large\" />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex justify-center items-center min-h-screen\">\n        <Card className=\"w-full max-w-2xl\">\n          <div className=\"text-red-500 text-center\">{error}</div>\n        </Card>\n      </div>\n    );\n  }\n\n  const getStatusBadgeType = (status: Trip['status']) => {\n    switch (status) {\n      case 'pending':\n        return 'warning';\n      case 'active':\n        return 'processing';\n      case 'completed':\n        return 'success';\n      case 'cancelled':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n\n  const getStatusText = (status: Trip['status']) => {\n    switch (status) {\n      case 'pending':\n        return 'Ожидает';\n      case 'active':\n        return 'Активна';\n      case 'completed':\n        return 'Завершена';\n      case 'cancelled':\n        return 'Отменена';\n      default:\n        return status;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8 px-4\">\n      <div className=\"max-w-7xl mx-auto\">\n        <Card\n          title={\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-xl\">Мои поездки</span>\n              <Button\n                type=\"primary\"\n                icon={<PlusOutlined />}\n                onClick={() => router.push('/trips/create')}\n              >\n                Создать поездку\n              </Button>\n            </div>\n          }\n          className=\"shadow-lg\"\n        >\n          <Tabs\n            activeKey={activeTab}\n            onChange={(key) => setActiveTab(key as 'driver' | 'passenger')}\n            items={[\n              {\n                key: 'driver',\n                label: 'Я водитель',\n                children: (\n                  <div className=\"space-y-4\">\n                    {trips.length === 0 ? (\n                      <Empty\n                        description=\"Поездок не найдено\"\n                        className=\"my-8\"\n                      />\n                    ) : (\n                      trips.map((trip) => (\n                        <Card\n                          key={trip.id}\n                          className=\"hover:shadow-md transition-shadow cursor-pointer\"\n                          onClick={() => router.push(`/trips/${trip.id}`)}\n                        >\n                          <div className=\"flex flex-col sm:flex-row justify-between gap-4\">\n                            <div className=\"flex-1\">\n                              <div className=\"flex items-center gap-2 mb-2\">\n                                <span className=\"text-lg font-medium\">\n                                  {trip.departure_location}\n                                </span>\n                                <ArrowRightOutlined className=\"text-gray-400\" />\n                                <span className=\"text-lg font-medium\">\n                                  {trip.destination_location}\n                                </span>\n                              </div>\n                              <div className=\"text-sm text-gray-500\">\n                                <div>\n                                  Водитель: {trip.driver.first_name} {trip.driver.last_name}\n                                </div>\n                                <div>Дата: {formatDate(trip.date)}</div>\n                              </div>\n                            </div>\n                            <div className=\"flex flex-col items-end gap-2\">\n                              <Badge\n                                status={getStatusBadgeType(trip.status)}\n                                text={getStatusText(trip.status)}\n                              />\n                              <div className=\"text-lg font-semibold\">\n                                {trip.price} ₽\n                              </div>\n                              <div className=\"text-sm text-gray-500\">\n                                {trip.available_seats} мест свободно\n                              </div>\n                            </div>\n                          </div>\n                        </Card>\n                      ))\n                    )}\n                  </div>\n                ),\n              },\n              {\n                key: 'passenger',\n                label: 'Я пассажир',\n                children: (\n                  <div className=\"space-y-4\">\n                    {trips.length === 0 ? (\n                      <Empty\n                        description=\"Поездок не найдено\"\n                        className=\"my-8\"\n                      />\n                    ) : (\n                      trips.map((trip) => (\n                        <Card\n                          key={trip.id}\n                          className=\"hover:shadow-md transition-shadow cursor-pointer\"\n                          onClick={() => router.push(`/trips/${trip.id}`)}\n                        >\n                          <div className=\"flex flex-col sm:flex-row justify-between gap-4\">\n                            <div className=\"flex-1\">\n                              <div className=\"flex items-center gap-2 mb-2\">\n                                <span className=\"text-lg font-medium\">\n                                  {trip.departure_location}\n                                </span>\n                                <ArrowRightOutlined className=\"text-gray-400\" />\n                                <span className=\"text-lg font-medium\">\n                                  {trip.destination_location}\n                                </span>\n                              </div>\n                              <div className=\"text-sm text-gray-500\">\n                                <div>\n                                  Водитель: {trip.driver.first_name} {trip.driver.last_name}\n                                </div>\n                                <div>Дата: {formatDate(trip.date)}</div>\n                              </div>\n                            </div>\n                            <div className=\"flex flex-col items-end gap-2\">\n                              <Badge\n                                status={getStatusBadgeType(trip.status)}\n                                text={getStatusText(trip.status)}\n                              />\n                              <div className=\"text-lg font-semibold\">\n                                {trip.price} ₽\n                              </div>\n                              <div className=\"text-sm text-gray-500\">\n                                {trip.available_seats} мест свободно\n                              </div>\n                            </div>\n                          </div>\n                        </Card>\n                      ))\n                    )}\n                  </div>\n                ),\n              },\n            ]}\n          />\n        </Card>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}